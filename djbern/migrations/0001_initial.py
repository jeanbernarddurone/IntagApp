# Generated by Django 5.1.3 on 2025-04-03 08:12

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Donnee",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nom", models.CharField(max_length=255)),
                (
                    "Age",
                    models.IntegerField(
                        default=0,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                ("code_postal", models.CharField(default="000000", max_length=10)),
                ("latitude", models.FloatField(blank=True, null=True)),
                ("longitude", models.FloatField(blank=True, null=True)),
                (
                    "Niveau_Education",
                    models.CharField(
                        choices=[
                            ("Aucune", "Aucune"),
                            ("Primaire", "Primaire"),
                            ("Bac", "Bac"),
                            ("Licence", "Licence"),
                            ("Matrice", "Matrice"),
                            ("PhD", "PhD"),
                        ],
                        max_length=50,
                    ),
                ),
                ("ville", models.CharField(max_length=255)),
                (
                    "Province",
                    models.CharField(
                        choices=[
                            ("Alberta", "Alberta"),
                            ("Colombie-Britannique", "Colombie-Britannique"),
                            ("Île-du-Prince-Édouard", "Île-du-Prince-Édouard"),
                            ("Manitoba", "Manitoba"),
                            ("Nouveau-Brunswick", "Nouveau-Brunswick"),
                            ("Nouvelle-Écosse", "Nouvelle-Écosse"),
                            ("Nunavut", "Nunavut"),
                            ("Ontario", "Ontario"),
                            ("Québec", "Québec"),
                            ("Saskatchewan", "Saskatchewan"),
                            ("Terre-Neuve-et-Labrador", "Terre-Neuve-et-Labrador"),
                            ("Territoires du Nord-Ouest", "Territoires du Nord-Ouest"),
                            ("Yukon", "Yukon"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "type_exploitation",
                    models.CharField(
                        choices=[
                            ("Culture", "Culture"),
                            ("Élevage", "Élevage"),
                            ("Mixte", "Mixte"),
                            ("Autre", "Autre"),
                        ],
                        max_length=50,
                    ),
                ),
                ("type_Culture", models.CharField(max_length=255)),
                (
                    "Elvage",
                    models.CharField(
                        choices=[
                            ("Aucune", "Aucune"),
                            ("Bovin", "Bovin"),
                            ("Caprin", "Caprin"),
                            ("Ovin", "Ovin"),
                            ("Volaille", "Volaille"),
                            ("Equin", "Equin"),
                            ("Autre", "Autre"),
                        ],
                        max_length=50,
                    ),
                ),
                ("Autre_Elevage", models.CharField(max_length=255)),
                (
                    "Effective_Elevage",
                    models.IntegerField(
                        default=0,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "surface_Exploitation",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "surface_cultivée",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "surface_irriguée",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "qualité_sol",
                    models.CharField(
                        choices=[
                            ("Pauvre", "Pauvre"),
                            ("Moyen", "Moyen"),
                            ("Bon", "Bon"),
                            ("Très bon", "Très bon"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "employés_permanents",
                    models.IntegerField(
                        default=0,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "employés_temporaires",
                    models.IntegerField(
                        default=0,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "employé_avec_competence_NTIC",
                    models.CharField(
                        choices=[("1", "Oui"), ("2", "Non")], max_length=50
                    ),
                ),
                (
                    "Capital_Financier",
                    models.DecimalField(decimal_places=2, default=0, max_digits=15),
                ),
                (
                    "Membre_association",
                    models.CharField(
                        choices=[("1", "Oui"), ("2", "Non")], max_length=50
                    ),
                ),
                (
                    "utilise_Drone",
                    models.CharField(
                        choices=[("1", "Oui"), ("2", "Non")], max_length=50
                    ),
                ),
                (
                    "utilise_Capteur",
                    models.CharField(
                        choices=[("1", "Oui"), ("2", "Non")], max_length=50
                    ),
                ),
                (
                    "utilise_tracteur_connecté",
                    models.CharField(
                        choices=[("1", "Oui"), ("2", "Non")], max_length=50
                    ),
                ),
                (
                    "utilise_autre_NTIC",
                    models.CharField(
                        choices=[("1", "Oui"), ("2", "Non")], max_length=50
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ForumPost",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("titre", models.CharField(max_length=255)),
                ("contenu", models.TextField()),
                ("auteur", models.CharField(max_length=255)),
                ("date_publication", models.DateTimeField(auto_now_add=True)),
                ("date_creation", models.DateTimeField(auto_now_add=True)),
                ("likes", models.IntegerField(default=0)),
                ("dislikes", models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name="ReponsePost",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("auteur", models.CharField(max_length=255)),
                ("contenu", models.TextField()),
                ("date_publication", models.DateTimeField(auto_now_add=True)),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sous_reponses",
                        to="djbern.reponsepost",
                    ),
                ),
                (
                    "post",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reponses",
                        to="djbern.forumpost",
                    ),
                ),
            ],
        ),
    ]
